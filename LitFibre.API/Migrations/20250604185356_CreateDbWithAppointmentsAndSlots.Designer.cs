// <auto-generated />
using System;
using LitFibre.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LitFibre.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250604185356_CreateDbWithAppointmentsAndSlots")]
    partial class CreateDbWithAppointmentsAndSlots
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LitFibre.API.Models.DBModels.AppointmentDbModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SlotId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SlotId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("LitFibre.API.Models.DBModels.SlotDbModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("End")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Slots");
                });

            modelBuilder.Entity("LitFibre.API.Models.DBModels.AppointmentDbModel", b =>
                {
                    b.HasOne("LitFibre.API.Models.DBModels.SlotDbModel", "Slot")
                        .WithMany()
                        .HasForeignKey("SlotId");

                    b.Navigation("Slot");
                });
#pragma warning restore 612, 618
        }
    }
}
